<?xml version="1.0" encoding="UTF-8"?>

<!--  ====================================================================  -->

<!--  =====  Automatic generated schema for language: eld            =====  -->

<!--  ====================================================================  -->

<!-- 
	ID:		eld-module
	ProviderName:	Element Language Definition
	ProviderHost:	eld.x4o.org
	Namespaces:		3
	Uri:			http://eld.x4o.org/xml/ns/eld-conv
	Uri schema:	http://eld.x4o.org/xml/ns/eld-conv-0.8.xsd
	Created on:		Sat Aug 24 21:57:18 CEST 2013
 -->
<schema xmlns="http://www.w3.org/2001/XMLSchema"
 xmlns:this="http://eld.x4o.org/xml/ns/eld-conv"
 xmlns:lang="http://eld.x4o.org/xml/ns/eld-lang"
 version="1.0" elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://eld.x4o.org/xml/ns/eld-conv">
	<import namespace="http://eld.x4o.org/xml/ns/eld-lang" schemaLocation="eld-lang-1.0.xsd"/>
	<complexType name="byteConverterType">
		<choice minOccurs="0" maxOccurs="unbounded"/>
	</complexType>
	<complexType name="doubleConverterType">
		<choice minOccurs="0" maxOccurs="unbounded"/>
	</complexType>
	<complexType name="longConverterType">
		<choice minOccurs="0" maxOccurs="unbounded"/>
	</complexType>
	<complexType name="classConverterType">
		<choice minOccurs="0" maxOccurs="unbounded"/>
	</complexType>
	<complexType name="stringSplitConverterType">
		<choice minOccurs="0" maxOccurs="unbounded">
			<element name="stringSplitConverterStep" type="this:stringSplitConverterStepType"/>
		</choice>
		<attribute name="useNativeType" type="string">
			<annotation>
				<documentation xml:lang="en">Set to true to convert to native data type.</documentation>
			</annotation>
		</attribute>
		<attribute name="singleToMethod" type="string">
			<annotation>
				<documentation xml:lang="en">Shortcut to use only this method for the &apos;to&apos; convert.</documentation>
			</annotation>
		</attribute>
		<attribute name="splitSize" type="string" use="required">
			<annotation>
				<documentation xml:lang="en">The split value expected size.</documentation>
			</annotation>
		</attribute>
		<attribute name="split" type="string" use="required">
			<annotation>
				<documentation xml:lang="en">The split regex.</documentation>
			</annotation>
		</attribute>
		<attribute name="classTo" type="string" use="required">
			<annotation>
				<documentation xml:lang="en">The class name to convert the string to.</documentation>
			</annotation>
		</attribute>
	</complexType>
	<complexType name="booleanConverterType">
		<choice minOccurs="0" maxOccurs="unbounded"/>
	</complexType>
	<complexType name="urlConverterType">
		<choice minOccurs="0" maxOccurs="unbounded"/>
	</complexType>
	<complexType name="integerConverterType">
		<choice minOccurs="0" maxOccurs="unbounded"/>
	</complexType>
	<complexType name="beanConverterType">
		<choice minOccurs="0" maxOccurs="unbounded"/>
		<attribute name="bean.class" type="string">
			<annotation>
				<documentation xml:lang="en">The class name of the converter to load.</documentation>
			</annotation>
		</attribute>
		<anyAttribute/>
	</complexType>
	<complexType name="stringSplitConverterStepType">
		<choice minOccurs="0" maxOccurs="unbounded">
			<element name="booleanConverter" type="this:booleanConverterType"/>
			<element name="byteConverter" type="this:byteConverterType"/>
			<element name="characterConverter" type="this:characterConverterType"/>
			<element name="classConverter" type="this:classConverterType"/>
			<element name="doubleConverter" type="this:doubleConverterType"/>
			<element name="enumConverter" type="this:enumConverterType"/>
			<element name="floatConverter" type="this:floatConverterType"/>
			<element name="integerConverter" type="this:integerConverterType"/>
			<element name="longConverter" type="this:longConverterType"/>
			<element name="stringSplitConverter" type="this:stringSplitConverterType"/>
			<element name="urlConverter" type="this:urlConverterType"/>
		</choice>
		<attribute name="toMethod" type="string">
			<annotation>
				<documentation xml:lang="en">The convert &apos;to&apos; method step.</documentation>
			</annotation>
		</attribute>
		<attribute name="fromOrder" type="string" use="required">
			<annotation>
				<documentation xml:lang="en">The convert &apos;from&apos; order.</documentation>
			</annotation>
		</attribute>
		<attribute name="fromMethod" type="string" use="required">
			<annotation>
				<documentation xml:lang="en">The convert &apos;from&apos; method step.</documentation>
			</annotation>
		</attribute>
		<attribute name="toOrder" type="string" use="required">
			<annotation>
				<documentation xml:lang="en">The convert &apos;to&apos; order.</documentation>
			</annotation>
		</attribute>
		<attribute name="objectConverter" type="string"/>
	</complexType>
	<complexType name="floatConverterType">
		<choice minOccurs="0" maxOccurs="unbounded"/>
	</complexType>
	<complexType name="characterConverterType">
		<choice minOccurs="0" maxOccurs="unbounded"/>
	</complexType>
	<complexType name="enumConverterType">
		<choice minOccurs="0" maxOccurs="unbounded"/>
		<attribute name="enumClass" type="string"/>
	</complexType>
	<element name="byteConverter" type="this:byteConverterType"/>
	<element name="doubleConverter" type="this:doubleConverterType"/>
	<element name="longConverter" type="this:longConverterType"/>
	<element name="classConverter" type="this:classConverterType"/>
	<element name="stringSplitConverter" type="this:stringSplitConverterType"/>
	<element name="booleanConverter" type="this:booleanConverterType"/>
	<element name="urlConverter" type="this:urlConverterType"/>
	<element name="integerConverter" type="this:integerConverterType"/>
	<element name="beanConverter" type="this:beanConverterType">
		<annotation>
			<documentation xml:lang="en">Define an loadable in bean.class for an ObjectConverter.</documentation>
		</annotation>
	</element>
	<element name="stringSplitConverterStep" type="this:stringSplitConverterStepType"/>
	<element name="floatConverter" type="this:floatConverterType"/>
	<element name="characterConverter" type="this:characterConverterType"/>
	<element name="enumConverter" type="this:enumConverterType"/>
</schema>
